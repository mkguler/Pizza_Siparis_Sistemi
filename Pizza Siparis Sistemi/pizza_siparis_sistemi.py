# -*- coding: utf-8 -*-
"""Pizza Siparis Sistemi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IhT79ka-NllVH2x-Kh-LeMpJvdgjKl3m
"""

# Kullanacağımız Kütüphaneleri Ekliyoruz
import csv
from datetime import datetime
import os


#Öncelikle oluşturulacak olan CSV dosyasının path belirleme işlemi ve sutun isimlendirme işlemlerini yapıyoruz

title=['TC NO','Ad Soyad','Pizza','Açıklama','Toplam Tutar','Kredi Kartı Numarası', 'Kart Son Geçerlilik', 'CVV Numarası', 'Sipariş Tahirihi']
csv_file_path = 'Orders_Database.csv'

# Menu.txt dosyası  oluşturup Menü içeriğini yazdırıyoruz
if not os.path.exists('Menu.txt'):
    with open("Menu.txt", "w") as file:
      file.write("* Lütfen bir pizza tabanı seçiniz:\n1: Klasik\n2: Margarita\n3: TürkPizza\n4: Sade Pizza\n")
      file.write("* ve seçeceğiniz sos:\n11: Zeytin\n12: Mantarlar\n13: Keçi peyniri\n14: Et\n15: Soğan\n16: Mısır\n")
      file.write("* Teşekkür ederiz!")


# Pizza superclassını oluşturuyoruz
class Pizza:
    cost = 0.0
    description = ""

    def get_description(self):
        return self.description

    def get_cost(self):
        return self.cost

# Sonra bir “Pizza” subclassı oluşturup pizza çeşitlerini tanımlıyoruz
class Klasik(Pizza):
    def __init__(self):
        self.description = "Klasik Pizza"
        self.cost = 69.99

class Margarita(Pizza):
    def __init__(self):
        self.description = "Margarita Pizza"
        self.cost = 89.99

class TurkPizza(Pizza):
    def __init__(self):
        self.description = "Turk Pizza"
        self.cost = 99.99

class SadePizza(Pizza):
    def __init__(self):
        self.description = "Sade Pizza"
        self.cost = 79.99

# Bu aşamada soslar için bir “Decorator” superclassı tanumlıyoruz
class Decorator(Pizza):
    component = None

    def __init__(self, component):
        self.component = component

    def get_cost(self):
        return self.component.get_cost() + Pizza.get_cost(self)

    def get_description(self):
        return self.component.get_description() + ' ' + Pizza.get_description(self)

# tekrardan bir “Decorator” subclassı oluşturarak sosları ve fiyatlarını tanımlıyoruz
class Zeytin(Decorator):
    def __init__(self, component):
        Decorator.__init__(self, component)
        self.cost = 9.99
        self.description = "Zeytin"

class Mantar(Decorator):
    def __init__(self, component):
        Decorator.__init__(self, component)
        self.cost = 12.99
        self.description = "Mantar"

class KeciPeyniri(Decorator):
    def __init__(self, component):
        Decorator.__init__(self, component)
        self.cost = 18.99
        self.description = "KeciPeyniri"

class Et(Decorator):
    def __init__(self, component):
        Decorator.__init__(self, component)
        self.cost = 20.99
        self.description = "Et"

class Sogan(Decorator):
    def __init__(self, component):
        Decorator.__init__(self, component)
        self.cost = 11.99
        self.description = "Sogan"

class Misir(Decorator):
    def __init__(self, component):
        Decorator.__init__(self, component)
        self.cost = 7.99
        self.description = "Misir"

# Orders_Database.csv dosyası oluşturarak sütunları tanımlama
if not os.path.exists(csv_file_path):
    # CSV dosyası yoksa oluştur
    with open(csv_file_path, 'w', newline='') as orders_file:
        writer = csv.writer(orders_file)
        writer.writerow(title)

#Main fonksiyonu tanımlama
def main():
    # Menu.txt dosyasını çağırarak Menüyü ekrana getirme
    with open('Menu.txt', 'r') as menu_file:
        menu = menu_file.read()
        print(menu)

    # istenen pizzanın seçilmesi
    while True:

        pizza_choice = int(input('Lütfen bir pizza tabanı seçiniz (1-4): '))

        if pizza_choice == 1:
            pizza = Klasik()
            break
        elif pizza_choice == 2:
            pizza = Margarita()
            break
        elif pizza_choice == 3:
            pizza = TurkPizza()
            break
        elif pizza_choice == 4:
            pizza = SadePizza()
            break
        else:
            # Geçersiz giriş
            print('Hatalı Seçim Yaptınız, Tekrar Deneyiniz.(1-4) Arası Bir Sayı Seçiniz')

# Sos seçimi, çoklu sos seçimi
    sauce = None  
    while True:
        sauce_choice = int(input("Eklemek istediğiniz sosu seçiniz (11-16)(Sos Seçiminden çıkmak için 0'a basın): "))

        if sauce_choice == 0:
            break
        elif sauce_choice == 11:
          
            if sauce is None:
                sauce = Zeytin(pizza)
          
            else:
                sauce = Zeytin(sauce)
        elif sauce_choice == 12:
            if sauce is None:
                sauce = Mantar(pizza)
            else:
                sauce = Mantar(sauce)
        elif sauce_choice == 13:
            if sauce is None:
                sauce = KeciPeyniri(pizza)
            else:
                sauce = KeciPeyniri(sauce)
        elif sauce_choice == 14:
            if sauce is None:
                sauce = Et(pizza)
            else:
                sauce = Et(sauce)
        elif sauce_choice == 15:
            if sauce is None:
                sauce = Sogan(pizza)
            else:
                sauce = Sogan(sauce)
        elif sauce_choice == 16:
            if sauce is None:
                sauce = Misir(pizza)
            else:
                sauce = Misir(sauce)
        else:
            print('Hatalı Seçim Yaptınız Tekrar Deneyiniz.(11-16) Arası Bir Sayı Seçiniz')

        
    # Siparişte yapılan seçimler sonucunda toplam fiyatı hesaplıyoruz, yuvarlama işlemi yapıyoruz
    total_cost = sauce.get_cost()
    total_cost=round(total_cost,2)
    print("\nSiparisiniz: ", sauce.get_description())
    print("Toplam fiyat: ₺", total_cost)

    # Kullancıdan istenen bilgileri topluyoruz
    Ad_Soyad = input('Adınız: ')
    Kimlik = input('TC Kimlik Numaranız: ')
    Kredi_Karti_No = input('Kredi Kartı Numaranız: ')
    Son_Kullanim = input('Kredi Kartı Son Kullanma Tarihi: ')
    CVV_No = input('Kredi Kartı CVV: ')

    # Sipariş tarihini çekiyoruz
    current_time = datetime.now()
    current_time_str = current_time.strftime("%Y-%m-%d %H:%M:%S")
    

    # Oluşturduğumuz Orders_Database.csv dosyasını çağırarak append ('a') metodu ile her sipariş bilgisini ekliyoruz

    
    with open(csv_file_path, 'a', newline='') as orders_file:
        writer = csv.writer(orders_file)
        writer.writerow([Kimlik, Ad_Soyad, pizza.get_description(), sauce.get_description(), total_cost, Kredi_Karti_No, Son_Kullanim, CVV_No, current_time])

    print("\nSiparişiniz için Teşekkur Ederiz!")

# Main foksiyonunu çalıştırıyoruz
if __name__ == '__main__':
    main()